Отвечай на русском языке  

###Задача: написать скрипт для автоматизации выполнения заданий на веб сайте Aviso.

##Технический стэк:

Язык программирования: python

Инструмент для автоматизации действий на сайте: SeleniumBase. 

Браузер: Chromium ОБЯЗАТЕЛЬНО С ПРОКСИ TOR. Без прокси Tor строго запрещено!

Платформа: скрипт должен быть кроссплатформенный, тоесть работать на всех ОС. 

###КРАЙНЕ ВАЖНЫЕ ТРЕБОВАНИЯ И ДЕТАЛИ:

- **СКРИПТ ОБЯЗАТЕЛЬНО ДОЛЖЕН ИМИТИРОВАТЬ ЧЕЛОВЕЧЕСКОЕ ПОВЕДЕНИЕ И ИСПОЛЬЗОВАТЬ ВСЕ ВОЗМОЖНЫЕ МЕТОДЫ СКРЫТИЯ АВТОМАТИЗАЦИИ**

- Тестируй скрипт в реальном времени и исправляй пока он не будет работать.

- Добавь очень подробное логирование всех действий. 

- Адаптируй скрипт под все устройства включая мобильные.

- Делай резервные копии каждой рабочей версии, номеруй их и кратко в названии файла описывай проблемы и преимущества. 

- Я гарантировано указал 100% правильные коды каждого элемента на странице. Если скрипт не может найти элемент, **ЭТО АБСОЛЮТНО НЕ ОЗНАЧАЕТ ЧТО КОД УКАЗАН НЕВЕРНО ИЛИ СЕЛЕКТОРЫ ИЗМЕНИЛИСЬ**, ЭТО ЗНАЧИТ ЧТО ЛИБО СТРАНИЦА НЕ ПРОГРУЗИЛАСЬ, ЛИБО ПРЕДЫДУЩИЙ ШАГ НЕ ВЫПОЛНЕН, ЛИБО ЕЩЁ ЧТО-ТО. ДЕЛО ТОЧНО НЕ В СЕЛЕКТОРАХ, ОНИ В ПРЕДОСТАВЛЕННЫХ КОДАХ ГАРАНТИРОВАНО ВЕРНЫЕ И ПОЛУЧЕНЫ БУКВАЛЬНО НЕСКОЛЬКО МИНУТ НАЗАД. 

- Допустимо выбрать другие библиотеки, инструменты или язык отличающиеся от тех которые я запросил, но функционал должен быть реализован полностью в соответствии с требованиями и браузером. Технический стек не важен. Использовать другой браузер вместо тор запрещено.

- КРАЙНЕ ВАЖНО: **ПОСЛЕ АБСОЛЮТНО КАЖДОГО ЛЮБОГО ИЗМЕНЕНИЯ ПЕРЕЧИТЫВАЙ ФАЙЛ С ТЗ ПОЛНОСТЬЮ ЧТОБЫ УБЕДИТЬСЯ ЧТО ТЫ НЕ ОТХОДИШЬ ОТ ТРЕБОВАНИЙ! ЭТО ОБЯЗАТЕЛЬНО! ЧИТАЙ ФАЙЛ С ТЗ ПОСТОЯННО СНОВА И СНОВА ДЛЯ МАКСИМАЛЬНОЙ ТОЧНОСТИ. НЕ ЧИТАЙ ЧАСТЯМИ, ЧИТАЙ СРАЗУ ВЕСЬ ФАЙЛ ПОЛНОСТЬЮ ЦЕЛИКОМ. 

- Очень вероятно что вывод логов в терминале может не работать: ты просто не увидишь вывод. **ЭТО НЕ ЗНАЧИТ ЧТО СКРИПТ НЕ РАБОТАЕТ,  ЭТО ЗНАЧИТ ЧТО НУЖНО ИСПОЛЬЗОВАТЬ ЛОГ ФАЙЛ ДЛЯ ЧТЕНИЯ ВЫВОДА**. ТАКАЯ СИТУАЦИЯ АБСОЛЮТНО НОРМАЛЬНА. 

- КАТЕГОРИЧЕСКИ ЗАПРЕЩЕНО СОЗДАВАТЬ УПРОЩЁННЫЕ ТЕСТЫ КОГДА ЧТО-ТО НЕ РАБОТАЕТ, ТЕСТИРУЙ ЦЕЛИКОМ. НЕ УПРОЩАЙ. ДАЖЕ ЕСЛИ ТЫ УПРОСТИШЬ ДО ПРИНТА ХЕЛЛОУ ВОРЛД, ЭТО НЕ РЕШИТ ПРОБЛЕМУ И НЕ ДАСТ БОЛЬШЕ ПОНИМАНИЯ. 

- Категорически запрещено создавать любые файлы кроме резервных копий и самого скрипта.

- Скрипт должен сам устанавливать необходимые библиотеки, браузер, тор, и устанавливать соединение. 

- Обязательно: НИ В КОЕМ СЛУЧАЕ НЕ ОСТАНАВИВАЙ РАЗРАБОТКУ СКРИПТА ДО ТЕХ ПОКА НЕ ДОВЕДЕШЬ ЕГО ДО ИДЕАЛА И НЕ УБЕДИШЬ ЧТО НА ПРАКТИКЕ ОН РАБОТАЕТ АБСОЛЮТНО ПОЛНОСТЬЮ В СООТВЕТСТВИИ СО ВСЕМИ ТРЕБОВАНИЯМИ И НЕ ДЕЛАЕТ ОШИБОК. ВООБЩЕ НЕ ОСТАНАВЛИВАЙ РАЗРАБОТКУ СОВСЕМ ПОКА СКРИПТ НЕ БУДЕТ ГОТОВ. ТЕСТИРУЙ ЕГО. КАТЕГОРИЧЕСКИ ЗАПРЕЩЕНО ОСТАНАВЛИВАТЬ РАЗРАБОТКУ. 

###Алгоритм работы скрипта:

#1. Авторизация.

Сперва скрипт должен перейти на веб сайт aviso по адресу https://aviso.bz/login. Затем, нужно ввести логин Aleksey345 в следующее поле: 

<div class="form-group"><input type="text" name="username" maxlength="40" class="form-control" value="" placeholder="Email или login"></div>

И пароль 123456 сюда:

<div class="form-group"><input type="password" name="password" maxlength="40" class="form-control" value="" placeholder="Пароль"></div>

А далее нажать кнопку "войти в аккаунт":

<button id="button-login" class="button button_theme_blue button_size_m"><span class="button__text">Войти в аккаунт</span></button>

После нажатия данной кнопки, есть вероятность что сайт запросит код подтверждения, однако учитывай что этого может не случиться и вход может произойти сразу. В случае запроса кода появляется следующее поле:

<div class="form-group"><input name="code" type="text" value="" maxlength="40" autocomplete="off" class="form-control" placeholder="Проверочный код"></div>

Скрипт должен запросить у пользователя код через консоль и ввести его в соответсвующее поле, а затем нажать "войти в аккаунт":

<button class="button button_theme_blue button_size_m button_margin_right"><span class="button__text">Войти в аккаунт</span></button>

И таким образом скрипт входит в аккаунт. 

Скрипт должен сохранить куки после удачной авторизации и подменять их при перезапусках избегая тем самым повторную авторизацию при наличии сохраненных кук сайта. 

#2. Выполнение заданий по просмотру видео на ютуб.

Скрипт переходит на страницу https://aviso.bz/tasks-youtube и начинает выполнять задания. 

HTML код одного элемента задания:

<tr class="ads_6278031">
        <td width="18">
          <div class="iconyoutube ybprosm" title="Просмотр видео"></div>
        </td>
        <td>
          <input type="hidden" id="ads_report_id_6278031" value="">
          <input type="hidden" id="ads_hash_6278031" value="">
          <input type="hidden" id="ads_video_id_6278031" value="">
          <input type="hidden" id="ads_timer_6278031" value="">

          
          <div id="start-ads-6278031">
          

          

            <!--<span onclick="funcjs['start_youtube'](6278031, '69e565487a2b5e135285ee73f4c0f701', 'ads-start', 'ads');" title="https://www.youtube.com/watch?v=C53KSX8lhsQ" style="cursor:pointer;color:#006699;">Посмотреть видео</span><br>-->
            
            <span id="link_ads_start_6278031" onclick="funcjs['start_youtube_new'](6278031, '10');" title="https://www.youtube.com/watch?v=C53KSX8lhsQ" style="cursor:pointer;color:#006699;">Посмотреть видео</span><br>
            

            

            <div class="serf-text">Просмотр видеоролика</div>
          </div>

          <div id="started-ads-6278031" style="display: none">
            <div style="display: grid; justify-items: center;justify-content: center;">
            <span style="display: inline-flex; align-items: center; color: #444A5C;">
              <img src="/statica/img/ico/clock.svg" style="padding-right: 4px; color: #3E4D5C; width: 16px; height:16px;">
              Осталось: <span id="timer_ads_6278031" style="font-weight: bold; padding: 0 3px;">0</span>сек
            </span>
              <span class="serf-text" style="border-bottom: 1px dotted #ABB5B1;  font-size: 12px; color: #ABB5B1; cursor: pointer; margin-top:1px;" onclick="funcjs['refuse_to_execute'](6278031); return false;">Отказаться от выполнения</span>
            </div>
          </div>
          <div id="ads_checking_btn_6278031" style="display: none">
            <div>
              <span class="youtube-button" style="display: grid; justify-items: center;justify-content: center;">
                <span id="btn_error_view_6278031" class="youtube-error" style="display: none">Ошибка просмотра</span>
                <div class="youtube-load" id="ads_loader_6278031" style="display: none; width: 140px;"></div>
                <span id="ads_btn_confirm_6278031" onclick="funcjs['viewCheckDirect'](6278031); return false;" class="status-link-youtube" data-id-task="6278031">Подтвердить просмотр</span>
                <span style="color: #f80000; display: none;" id="ads_error_text_6278031">Произошла ошибка, повторите попытку</span>
              </span>
            </div>
          </div>
          <div id="ads_success_text_6278031" style="flex-wrap: wrap; justify-content: center; align-items: center;display: none"></div>

          <div id="ads_id_6278031" style="border-left:1px solid #608ab9; margin-left:0px; padding-left:5px; border-top:1px solid #608ab9; margin-top:5px; padding-top:5px; display: none;">
            <span>
              № площадки: 6278031<br>
              Дата размещения: <b>08.07.2025 в 10:46</b><br>
              
              Выполнено пользователями: 335&nbsp;&nbsp;
              Осталось выполнений: 742<br>
              Таймер: <b>10</b> секунд<br>
            </span>
          </div>
        </td>
        <td align="right" nowrap="nowrap" style="text-align:right; width:190px;">
          
          <span title="Осталось просмотров" style="cursor: help;color:#ABB5B1">(742)</span>
          <span title="Стоимость просмотра" style="cursor:help;color:#9d0000;">0.032<span class="ruble-symbol" translate="no">o</span></span>
          <div style="margin-top:5px;">
            <span class="serf-text" style="font-size: 12px;vertical-align: middle;display: inline-block;">10 сек&nbsp;&nbsp;&nbsp;</span>
            
            <span class="vip" style="vertical-align: middle;display: inline-block; font-size: 13px;"><b>premium</b></span>
            <span class="ico ico-down" onclick="show_window('#ads_id_6278031');return false;" title="Подробная информация"></span>
            <span class="ico ico-report" onclick="popup_w('Жалоба на Youtube, видео №6278031', false, 550, 'func=youtube&amp;dop_func=ads&amp;id=6278031', 'ajax/users/abuse/pop-up-abuse.php');return false;" title="Пожаловаться на площадку"></span>
            <a class="ico ico-remove" style="cursor: pointer;" title="Скрыть площадку" onclick="js_post(this, 'ajax/earnings/ajax-youtube.php', 'func=del-area&amp;id=6278031&amp;type=ads&amp;hash=69e565487a2b5e135285ee73f4c0f701');return false;"></a>
          </div>
        </td>
      </tr>

Учти что данные такие как стоимость, название, время просмотра и другие могут отличаться, это пример. 

Для этого он должен:

1. Получить со страницы все задания, кнопки для перехода на страницу выполнения задания и время в течение которого нужно смотреть видео. Он должен получать задания постепенно, с паузами и прокручивая страницу вниз на случайное расстояние каждый раз, чтобы иммитировать человеческое поведение словно он читает задания. Также нужно эмулировать случайные, реалестичные, кривые движения курсора мышки к заданиям или любым другим координатам. 

2. Начать поочерёдно выполнять задания. Для этого, сначала нужно выбрать случайное время от 1 до 15 секунд, и через выбранное время нажать на кнопку "посмотреть видео" **СЛУЧАЙНО ВЫБРАННОГО ЗАДАНИЯ ИЗ НАЙДЕННЫХ ПРЕДВАРИТЕЛЬНО ПРОКРУТИВ СТРАНИЦУ К НЕМУ ХАОТИЧНЫМИ ДВИЖЕНИЯМИ И НАВЕСТИ НА НЕГО КУРСОР ПО СЛУЧАЙНОЙ КРИВОЙ ТРАЕКТОРИИ**:

<div id="start-ads-6278031">
          

          

            <!--<span onclick="funcjs['start_youtube'](6278031, '69e565487a2b5e135285ee73f4c0f701', 'ads-start', 'ads');" title="https://www.youtube.com/watch?v=C53KSX8lhsQ" style="cursor:pointer;color:#006699;">Посмотреть видео</span><br>-->
            
            <span id="link_ads_start_6278031" onclick="funcjs['start_youtube_new'](6278031, '10');" title="https://www.youtube.com/watch?v=C53KSX8lhsQ" style="cursor:pointer;color:#006699;">Посмотреть видео</span><br>
            

            

            <div class="serf-text">Просмотр видеоролика</div>
          </div>

3. После нажатия данной кнопки откроется ютуб-видео. Скрипт должен проверить нет ли рекламы по наличию следующего элемента:

<span class="ytp-ad-badge--clean-player ytp-ad-badge--stark-clean-player" id="ad-badge:1" style=""><div class="ad-simple-attributed-string ytp-ad-badge__text--clean-player" id="ad-simple-attributed-string:2" aria-label="Реклама" style="">Реклама</div></span>

Учти что слово "реклама" может быть на английском. Если данный элемент есть, нужно дождаться пока появится кнопка "пропустить" или пока начнется проигрывание самого видео (оно может начаться после рекламы само). 

Код кнопки "пропустить"

<span class="ytp-ad-skip-button-container ytp-ad-skip-button-container-detached" style=""><button class="ytp-ad-skip-button-modern ytp-button"><div class="ytp-ad-text ytp-ad-skip-button-text-centered ytp-ad-skip-button-text" id="ad-text:3" style="">Пропустить</div><span class="ytp-ad-skip-button-icon-modern"><svg height="100%" viewBox="-6 -6 36 36" width="100%"><path d="M5,18l10-6L5,6V18L5,18z M19,6h-2v12h2V6z" fill="#fff"></path></svg></span></button></span>

Код таймера видео означающий что оно запустилось само после рекламы:

<div class="player-controls-bottom player-controls-bottom-left cbox"><player-time-display class="ytwPlayerTimeDisplayHost"><div class="ytwPlayerTimeDisplayContent"><span class="ytwPlayerTimeDisplayTime" role="text" aria-label="Продолжительность воспроизведения 0:47">0:47</span><span class="ytwPlayerTimeDisplayTime ytwPlayerTimeDisplayTimeSecond"></span><span class="ytwPlayerTimeDisplayTimeDelimiter" aria-hidden="true">/</span><span class="ytwPlayerTimeDisplayTime ytwPlayerTimeDisplayTimeSecond" role="text" aria-label="Общая продолжительность видео 11:28">11:28</span></div></player-time-display></div>

Продолжительность может быть любой. 

Скрипт должен проверять наличие обоих элементов в реальном времени. Появление таймера означает завершение рекламы, а при появлении кнопки пропуска нужно её нажать. 

Не ориентируйся на текст элементов — он может быть на разных языках или меняться. 

Если время таймера не изменяется более трёх секунд, значит видео на паузе и скрипт должен нажать на следующий элемент:

<span class="yt-icon-shape yt-spec-icon-shape"><div style="width: 100%; height: 100%; display: block; fill: currentcolor;"><svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24" focusable="false" aria-hidden="true" style="pointer-events: none; display: inherit; width: 100%; height: 100%;"><path d="m7 4 12 8-12 8V4z"></path></svg></div></span>

Далее нужно подождать когда таймер покажет время равное тому что требуется в задании. Например, если в задании написано 10 секунд, то необходимо подождать когда таймер покажет ровно 10 секунд. Скрипт не должен считать время самостоятельно, он обязательно должен ориентироваться исклжчительно на встроенный таймер на сайте. Когда достигнуто требуемое время, скрипт должен подождать от 1 до 30 секунд и вернуться на предыдущую страницу, а затем нажать "подтвердить просмотр" (код этого элемента указан выше). В процессе просмотра видео скрипт должее делать абсолютно случайные движения курсором по случайным кривым траекториям в случайное время и делать случайные прокручивания страницы. 

4. Повторить процесс со всеми заданиями. Когда больше нет заданий, перейти к 5 шагу. 

5. Закрыть сайт и браузер, выбрать случайное время от 1 минуты до 2 часов и после прохождения этого времени вернуться на страницу https://aviso.bz/tasks-youtube, обновить её, проверить авторизацию и при необходимости подменить куки/пройти авторизацию снова **ТОЛЬКО ЕСЛИ ЭТО НЕОБХОДИМО**, а далее повторить все шаги выполнения заданий от 1 до 5 запустив тем самым бесконечный цикл выполнения.




###Уточнения:

- Всё исходное ТЗ сохранено в файле с названием "ТЗ". Переодически возвращайся к нему и перечитывай целиком, чтобы не отклоняться от деталей. Часто проверяй соответсвие с ТЗ. 
- Сохраняй только версии которые работают хотя бы на 60% или больше, либо имеют какие-то преимущества. Если версия совсем не работает, то и сохранять её не нужно. 
- Скрипт должен корректно ожидать появление элементов и взаимодействовать с ними только когда они уже доступны. 
- В логах выводи не только сами действия, но и их результат. На стадии разработки сделай логирование крайне подробным и чрезвычайно крайне детальным, но когда всё будет работать правильно, снизь логирование до базового и только необходимого.
- Не создавай никаких файлов кроме файла скрипта и резервных копий. Мне нужен только скрипт в одном файле. 
